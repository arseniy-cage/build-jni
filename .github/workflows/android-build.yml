name: Android Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  ANDROID_SDK_ROOT: /usr/local/lib/android/sdk

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        run: |
          # Устанавливаем Command Line Tools напрямую
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d cmdline-tools
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
          mv cmdline-tools/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/
          rm -rf cmdline-tools cmdline-tools.zip

          # Добавляем SDK Manager в PATH
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

          # Принимаем лицензии и устанавливаем компоненты
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-30" "build-tools;30.0.1" "platform-tools" "ndk;21.4.7075529"
          sdkmanager --update

      - name: Configure Firebase
        run: |
          echo "${{ secrets.FIREBASE_SERVICES_JSON }}" > app/google-services.json
          chmod +x gradlew

      - name: Build APK
        run: |
          ./gradlew assembleDebug
          ls -la app/build/outputs/apk/debug/

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: game-app-debug
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 3
